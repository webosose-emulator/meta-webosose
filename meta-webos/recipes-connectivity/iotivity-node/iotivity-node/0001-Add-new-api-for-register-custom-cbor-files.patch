From c6d717f9dd50520debb5a75973804819544dff90 Mon Sep 17 00:00:00 2001
From: Lauren Jeong <jy.jeong@lge.com>
Date: Thu, 10 May 2018 16:32:05 +0900
Subject: [PATCH] Add new api for register custom cbor files

---
 lib/CustomStorageHandler.js | 57 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 57 insertions(+)
 create mode 100644 lib/CustomStorageHandler.js

diff --git a/lib/CustomStorageHandler.js b/lib/CustomStorageHandler.js
new file mode 100644
index 0000000..ddf608d
--- /dev/null
+++ b/lib/CustomStorageHandler.js
@@ -0,0 +1,57 @@
+var path = require("path");
+var fs = require("fs");
+
+module.exports = function( cborFile ) {
+    var appPath = process.cwd();
+    var cborFileName = '';
+    var index = cborFile.lastIndexOf( '/' );
+    if ( index != -1 || index != 0 ){
+        appPath = appPath + '/'  + cborFile.substr( 0, index );
+        cborFileName = cborFile.substr( index + 1, cborFile.length );
+    }
+
+    var ret= {
+        open: function( pFile, mode ) {
+            var fileName = cborFileName;
+            if (pFile != 'oic_svr_db.dat'){
+                fileName = pFile;
+            }
+
+            var fd;
+            var absolutePath = path.join( appPath, fileName );
+
+            mode = mode.replace( /b/g, "" );
+
+            // If the requested file does not exist, create it
+            try {
+                fd = fs.openSync( absolutePath, "wx" );
+                fs.closeSync( fd );
+            } catch ( theError ) {
+                if ( theError.message.substr( 0, 6 ) !== "EEXIST" ) {
+                    throw theError;
+                }
+            }
+
+            // Open the file in the requested mode
+            fd = fs.openSync( absolutePath, mode );
+            fd = ( fd === undefined ? -1 : fd );
+            return fd;
+        },
+        close: function( fp ) {
+            fs.closeSync( fp );
+            return 0;
+        },
+        read: function( buffer, totalSize, fp ) {
+            return fs.readSync( fp, buffer, 0, totalSize, null );
+        },
+        write: function( buffer, totalSize, fp ) {
+            return fs.writeSync( fp, buffer, 0, totalSize, null );
+        },
+        unlink: function( path ) {
+            fs.unlinkSync( path );
+            return 0;
+        }
+    }
+    return ret;
+}
+
-- 
1.9.1

